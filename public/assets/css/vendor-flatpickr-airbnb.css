@import url(https://fonts.googleapis.com/css?family=Open+Sans:600,700|Source+Sans+Pro:400,400i,600,700);[dir=ltr] .flatpickr-calendar {
  width: 307.875px;
}

[dir=ltr] .dayContainer {
  padding: 0;
  border-right: 0;
}

[dir=ltr] span.flatpickr-day, [dir=ltr] span.flatpickr-day.prevMonthDay, [dir=ltr] span.flatpickr-day.nextMonthDay {
  border-radius: 0 !important;
  border: 1px solid #e9e9e9;
  max-width: none;
  border-right-color: transparent;
}
[dir=ltr] span.flatpickr-day:nth-child(n+8), [dir=ltr] span.flatpickr-day.prevMonthDay:nth-child(n+8), [dir=ltr] span.flatpickr-day.nextMonthDay:nth-child(n+8) {
  border-top-color: transparent;
}
[dir=ltr] span.flatpickr-day:nth-child(7n-6), [dir=ltr] span.flatpickr-day.prevMonthDay:nth-child(7n-6), [dir=ltr] span.flatpickr-day.nextMonthDay:nth-child(7n-6) {
  border-left: 0;
}
[dir=ltr] span.flatpickr-day:nth-child(n+36), [dir=ltr] span.flatpickr-day.prevMonthDay:nth-child(n+36), [dir=ltr] span.flatpickr-day.nextMonthDay:nth-child(n+36) {
  border-bottom: 0;
}
[dir=ltr] span.flatpickr-day:nth-child(-n+7), [dir=ltr] span.flatpickr-day.prevMonthDay:nth-child(-n+7), [dir=ltr] span.flatpickr-day.nextMonthDay:nth-child(-n+7) {
  margin-top: 0;
}
[dir=ltr] span.flatpickr-day.today:not(.selected), [dir=ltr] span.flatpickr-day.prevMonthDay.today:not(.selected), [dir=ltr] span.flatpickr-day.nextMonthDay.today:not(.selected) {
  border-color: #e9e9e9;
  border-right-color: transparent;
  border-top-color: transparent;
  border-bottom-color: #F64747;
}
[dir=ltr] span.flatpickr-day.today:not(.selected):hover, [dir=ltr] span.flatpickr-day.prevMonthDay.today:not(.selected):hover, [dir=ltr] span.flatpickr-day.nextMonthDay.today:not(.selected):hover {
  border: 1px solid #F64747;
}
[dir=ltr] span.flatpickr-day.startRange, [dir=ltr] span.flatpickr-day.endRange, [dir=ltr] span.flatpickr-day.prevMonthDay.startRange, [dir=ltr] span.flatpickr-day.prevMonthDay.endRange, [dir=ltr] span.flatpickr-day.nextMonthDay.startRange, [dir=ltr] span.flatpickr-day.nextMonthDay.endRange {
  border-color: #4f99ff;
}
[dir=ltr] span.flatpickr-day.today, [dir=ltr] span.flatpickr-day.selected, [dir=ltr] span.flatpickr-day.prevMonthDay.today, [dir=ltr] span.flatpickr-day.prevMonthDay.selected, [dir=ltr] span.flatpickr-day.nextMonthDay.today, [dir=ltr] span.flatpickr-day.nextMonthDay.selected {
  z-index: 2;
}

[dir=ltr] .rangeMode .flatpickr-day {
  margin-top: -1px;
}

[dir=ltr] .flatpickr-weekwrapper .flatpickr-weeks {
  box-shadow: none;
}

[dir=ltr] .flatpickr-weekwrapper span.flatpickr-day {
  border: 0;
  margin: -1px 0 0 -1px;
}

[dir=ltr] .hasWeeks .flatpickr-days {
  border-right: 0;
}
/*# sourceMappingURL=data:application/json;base64, */